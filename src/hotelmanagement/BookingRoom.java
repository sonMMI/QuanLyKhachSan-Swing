/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package hotelmanagement;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import java.awt.Font;
import javax.swing.JLabel;
import java.awt.Color;

/**
 *
 * @author doanvanson
 */
public class BookingRoom extends javax.swing.JFrame {

    /**
     * Creates new form RoomBooking2
     */
    public BookingRoom() {
    	setTitle("Hotel Management - DVS");
        initComponents();
    }
    
    private JFrame frame;
    int flag = 0;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        bookingRoom = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        lblCustomnerName = new javax.swing.JLabel();
        lblCustomnerName.setFont(new Font("Lucida Grande", Font.PLAIN, 14));
        lblCodeCustomer = new javax.swing.JLabel();
        lblCodeCustomer.setFont(new Font("Lucida Grande", Font.PLAIN, 14));
        lblContactNumber = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        lblNumberPersons = new javax.swing.JLabel();
        lblRoomNumber = new javax.swing.JLabel();
        inputName = new javax.swing.JTextField();
        inputCodeCustomer = new javax.swing.JTextField();
        inputContactNumber = new javax.swing.JTextField();
        inputContactAddress = new javax.swing.JTextField();
        inputRoomNumber = new javax.swing.JTextField();
        inputNumberPersons = new javax.swing.JTextField();
        btnCheckCustomer = new javax.swing.JButton();
        btnBooking = new javax.swing.JButton();
        

        // Frame
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bookingRoom.setBackground(new java.awt.Color(255, 204, 204));
        lblBookingRoom = new JLabel("Booking Room");
        lblBookingRoom.setBackground(Color.WHITE);
        lblBookingRoom.setForeground(Color.WHITE);
        lblBookingRoom.setFont(new Font("Lucida Grande", Font.BOLD | Font.ITALIC, 35));

        

        //Button Home
        btnHome.setFont(new Font("Dialog", Font.BOLD, 14)); 
        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8-home-page-32.png"))); 
        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home_buttonActionPerformed(evt);
            }
        }); 
        
        //Button Refresh
        JButton btnRefresh = new JButton("Refresh");
        btnRefresh.setFont(new Font("Lucida Grande", Font.PLAIN, 20));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
        	public void actionPerformed(java.awt.event.ActionEvent evt) {
        		refresh_buttonActionPerformed(evt);
        	}
        });

        // Button Back
        btnBack.setFont(new Font("Dialog", Font.BOLD, 14)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8-go-back-32.png"))); 
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_buttonActionPerformed(evt);
            }
        });

        //Button Check
        btnCheckCustomer.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 18)); 
        btnCheckCustomer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8-id-32.png"))); 
        btnCheckCustomer.setText("Check Customer");
        btnCheckCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_buttonActionPerformed(evt);
            }
        });
        
        // Button Booking
        btnBooking.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 36)); 
        btnBooking.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8-bed-64.png"))); 
        btnBooking.setText("Book");
        btnBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                book_buttonActionPerformed(evt);
            }
        });
        
        // lbl content input

        lblCustomnerName.setText("Customer Name");

        lblCodeCustomer.setText("Code Customer");

        lblContactNumber.setText("Contact Number");

        lblAddress.setText("Address");

        lblNumberPersons.setText("Number Of Persons");

        lblRoomNumber.setText("Room Number ");
        
        

        javax.swing.GroupLayout gl_bookingRoom = new javax.swing.GroupLayout(bookingRoom);
        gl_bookingRoom.setHorizontalGroup(
        	gl_bookingRoom.createParallelGroup(Alignment.TRAILING)
        		.addGroup(gl_bookingRoom.createSequentialGroup()
        			.addComponent(btnHome, GroupLayout.PREFERRED_SIZE, 121, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(gl_bookingRoom.createParallelGroup(Alignment.LEADING)
        				.addGroup(gl_bookingRoom.createSequentialGroup()
        					.addGap(86)
        					.addComponent(btnRefresh, GroupLayout.PREFERRED_SIZE, 114, GroupLayout.PREFERRED_SIZE)
        					.addGap(115)
        					.addGroup(gl_bookingRoom.createParallelGroup(Alignment.LEADING)
        						.addComponent(lblCustomnerName, GroupLayout.PREFERRED_SIZE, 114, GroupLayout.PREFERRED_SIZE)
        						.addGroup(gl_bookingRoom.createParallelGroup(Alignment.TRAILING)
        							.addComponent(lblContactNumber)
        							.addComponent(lblNumberPersons)
        							.addComponent(lblRoomNumber)
        							.addComponent(lblAddress))
        						.addComponent(lblCodeCustomer, GroupLayout.PREFERRED_SIZE, 107, GroupLayout.PREFERRED_SIZE))
        					.addGap(45)
        					.addGroup(gl_bookingRoom.createParallelGroup(Alignment.LEADING, false)
        						.addComponent(inputNumberPersons)
        						.addComponent(inputRoomNumber, 196, 196, Short.MAX_VALUE)
        						.addComponent(inputCodeCustomer)
        						.addComponent(inputName, GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
        						.addComponent(inputContactNumber)
        						.addComponent(inputContactAddress, GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE))
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addComponent(btnCheckCustomer))
        				.addGroup(gl_bookingRoom.createSequentialGroup()
        					.addGap(380)
        					.addComponent(lblBookingRoom, GroupLayout.PREFERRED_SIZE, 265, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED, 367, Short.MAX_VALUE)
        					.addComponent(btnBack, GroupLayout.PREFERRED_SIZE, 109, GroupLayout.PREFERRED_SIZE)))
        			.addContainerGap())
        		.addGroup(gl_bookingRoom.createSequentialGroup()
        			.addContainerGap(539, Short.MAX_VALUE)
        			.addComponent(btnBooking, GroupLayout.PREFERRED_SIZE, 226, GroupLayout.PREFERRED_SIZE)
        			.addGap(483))
        );
        gl_bookingRoom.setVerticalGroup(
        	gl_bookingRoom.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_bookingRoom.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(gl_bookingRoom.createParallelGroup(Alignment.BASELINE)
        				.addComponent(btnHome, GroupLayout.PREFERRED_SIZE, 54, GroupLayout.PREFERRED_SIZE)
        				.addComponent(btnBack, GroupLayout.PREFERRED_SIZE, 53, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblBookingRoom, GroupLayout.PREFERRED_SIZE, 41, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(gl_bookingRoom.createParallelGroup(Alignment.BASELINE)
        				.addComponent(inputName, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblCustomnerName, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE))
        			.addGap(24)
        			.addGroup(gl_bookingRoom.createParallelGroup(Alignment.BASELINE)
        				.addComponent(inputCodeCustomer, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblCodeCustomer)
        				.addComponent(btnCheckCustomer))
        			.addGap(31)
        			.addGroup(gl_bookingRoom.createParallelGroup(Alignment.BASELINE)
        				.addComponent(inputContactNumber, GroupLayout.PREFERRED_SIZE, 41, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblContactNumber))
        			.addPreferredGap(ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
        			.addGroup(gl_bookingRoom.createParallelGroup(Alignment.BASELINE)
        				.addComponent(lblAddress)
        				.addComponent(inputContactAddress, GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))
        			.addGap(36)
        			.addGroup(gl_bookingRoom.createParallelGroup(Alignment.BASELINE)
        				.addComponent(inputNumberPersons, GroupLayout.PREFERRED_SIZE, 41, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblNumberPersons))
        			.addGap(28)
        			.addGroup(gl_bookingRoom.createParallelGroup(Alignment.BASELINE)
        				.addComponent(lblRoomNumber)
        				.addComponent(inputRoomNumber, GroupLayout.PREFERRED_SIZE, 42, GroupLayout.PREFERRED_SIZE))
        			.addGap(18)
        			.addComponent(btnBooking, GroupLayout.PREFERRED_SIZE, 84, GroupLayout.PREFERRED_SIZE)
        			.addGap(16))
        		.addGroup(gl_bookingRoom.createSequentialGroup()
        			.addGap(211)
        			.addComponent(btnRefresh, GroupLayout.PREFERRED_SIZE, 96, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(287, Short.MAX_VALUE))
        );
        bookingRoom.setLayout(gl_bookingRoom);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bookingRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bookingRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>
    
    
    // ======== Begin Get Database Table Room ========== 
    
    // Event home_buttonActionPerformed
    private void home_buttonActionPerformed(java.awt.event.ActionEvent evt) {
        new MainScreen().setVisible(true);
        this.setVisible(false);
    }
    
    // Event back_buttonActionPerformed
    private void back_buttonActionPerformed(java.awt.event.ActionEvent evt) {
        new RoomAvailable().setVisible(true);
        this.setVisible(false);
    }
    
    // Event refresh_buttonActionPerformed
    private void refresh_buttonActionPerformed(java.awt.event.ActionEvent evt) {
    	new BookingRoom().setVisible(true);
        this.setVisible(false);
    }

    
    // Event book_buttonActionPerformed
    private void book_buttonActionPerformed(java.awt.event.ActionEvent evt) {
        String name = inputName.getText();
        String contact = inputContactNumber.getText();
        String address = inputContactAddress.getText();
        String code = inputCodeCustomer.getText();
        String numberPerson = inputNumberPersons.getText();
        String room = inputRoomNumber.getText();
        
        
        if(name.equals("")||contact.equals("")||address.equals("")||code.equals("")||numberPerson.equals("")||room.equals("")){
            JOptionPane.showMessageDialog(frame, "Please fill the details");
            return;
        }
 
        int l = contact.length();
        for(int i = 0; i < l; i++){
        	// PhoneNumber 0 between 9
            if(contact.codePointAt(i) < 48 || contact.codePointAt(i) >57){
                JOptionPane.showMessageDialog(frame, "Invalid Contact Phone Number, input 0 -> 9");
                return;
            }
        }
        
        Date time = java.util.Calendar.getInstance().getTime(); 
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("JDBC:mysql://192.168.64.2:3306/Hotel_Management_System", "root", "password");
            Statement stmt = con.createStatement();
            stmt.executeUpdate("USE Hotel_Management_System");
            ResultSet rs = stmt.executeQuery("SELECT * FROM room  WHERE id = " + room);
            rs.next();
            
            int max = Integer.parseInt(rs.getString("capacity"));
            int occ = Integer.parseInt(rs.getString("occupied"));
            
            // check room have empty
            if(occ == 1){
                JOptionPane.showMessageDialog(frame, "Room is already occupied");
                return;
            }
            
            // Check number Person have too much limit 
            int numberPersonPresent = Integer.parseInt(numberPerson);
            if(numberPersonPresent > max){
                JOptionPane.showMessageDialog(frame, "Person limit exceeding \nMax " + max);
                return;
            }
            
            
            // Check code customer saved database 
            String codeCustomer = inputCodeCustomer.getText();
            ResultSet checkCode = stmt.executeQuery("select * from customer where codeCustomer ='" + codeCustomer + "'");
            checkCode.next();
             
            try {
            	if(checkCode.getString("codeCustomer").equals(codeCustomer)) {
                	JOptionPane.showMessageDialog(frame, "Code Customer saved, Please click Refresh or Check Customer");
                } 
            } catch(Exception e){
            	
            	// If customer saved, do not add customer to the table.
            	if(flag == 0) {            	
            		stmt.executeUpdate("INSERT INTO customer VALUES('" + code + "','" + name + "','" + contact + "','" + address + "')");
            	}
            	
            	stmt.executeUpdate("INSERT INTO bookings (codeCustomer, number_of_persons, room, checkin) values('" + code + "'," + numberPerson + "," + room + ",'" + time + "')");
            	stmt.executeUpdate("UPDATE room SET occupied = 1 WHERE id= " + room);
            	
            	JOptionPane.showMessageDialog(frame, "Room Booked");
            	new CustomerList().setVisible(true);
            	this.setVisible(false);
            	con.close();
            	stmt.close();           
            }	
        }
        catch(Exception e)
        {
            System.out.println("Esception: " + e);
        }
        
    }

    

    // Event check_buttonActionPerformed get database of customer saved
    private void check_buttonActionPerformed(java.awt.event.ActionEvent evt) {
        String codeCustomer = inputCodeCustomer.getText();
        if (codeCustomer.equals("")) {
        	JOptionPane.showMessageDialog(frame, "Please input staff code");
        }
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("JDBC:mysql://192.168.64.2:3306/Hotel_Management_System","root", "password");
            Statement stmt = conn.createStatement();
            stmt.executeUpdate("USE Hotel_Management_System;");
            ResultSet rs = stmt.executeQuery("SELECT * FROM customer WHERE code_staff ='" + codeCustomer + "'");
            
        	rs.next();
            String name = rs.getString("name");
            String contact = rs.getString("contact");
            String address = rs.getString("address");
           
            inputName.setText(name);
            inputContactNumber.setText(contact);
            inputContactAddress.setText(address);
            
            flag = 1;
            rs.close();  
            conn.close();
            stmt.close();  
                  
        }
        catch(Exception e)
        {
            System.out.println("Esception: " + e);
        }
        
    }

    //========= End Event Click Button ===========
    

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookingRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookingRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookingRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookingRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookingRoom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JTextField inputContactAddress;
    private javax.swing.JTextField inputCodeCustomer;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBooking;
    private javax.swing.JButton btnCheckCustomer;
    private javax.swing.JTextField inputContactNumber;
    private javax.swing.JButton btnHome;
    private javax.swing.JTextField inputNumberPersons;
    private javax.swing.JLabel lblCustomnerName;
    private javax.swing.JLabel lblCodeCustomer;
    private javax.swing.JLabel lblContactNumber;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblNumberPersons;
    private javax.swing.JLabel lblRoomNumber;
    private javax.swing.JPanel bookingRoom;
    private javax.swing.JTextField inputName;
    private javax.swing.JTextField inputRoomNumber;
    private JLabel lblBookingRoom;
}
